name: Python Package

# permissions:
#   id-token: write
#   contents: read

on: [push, pull_request]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

  validate:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Lint with flake8
        uses: py-actions/flake8@v2
        with:
          max-line-length: "120:W"
          ignore: "F841"
        continue-on-error: false

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: "3.11"
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: "x86"
          cache: "pip"
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  diff:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: CDK Diff
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "deploy"
          cdk_args: "--require-approval never"
          actions_comment: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: CDK Deploy
        if: |
          ${{ github.ref_type == 'pull_request' && 
          github.event.action == 'closed' && 
          github.event.pull_request.merged == true && 
          startsWith(github.ref, 'refs/heads/main') }}
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "deploy"
          cdk_args: "--require-approval never"
          actions_comment: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
      # - name: Login to Public ECR
      #   uses: docker/login-action@v3
      #   with:
      #     registry: public.ecr.aws
      #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     # https://github.com/aws-actions/configure-aws-credentials
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: my-docker-hub-namespace/my-docker-hub-repository
      # - name: Build and push Docker image
      #   id: push
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
