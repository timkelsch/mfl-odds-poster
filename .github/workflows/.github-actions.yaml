name: Python Package

on: [pull_request]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12.6
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.6"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: pytest
      - name: cdk-diff
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "diff"
          cdk_args: "--require-approval never"
          actions_comment: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

  # validate:
  #   runs-on: ubuntu-latest
  #   needs: checkout
  #   steps:
  #     - name: Lint with flake8
  #       uses: py-actions/flake8@v2
  #       with:
  #         max-line-length: "120"
  #         ignore: "F841"
  #       continue-on-error: false

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: CDK Deploy
  #       if: |
  #         ${{ github.ref_type == 'pull_request' &&
  #         github.event.action == 'closed' &&
  #         github.event.pull_request.merged == true &&
  #         startsWith(github.ref, 'refs/heads/main') }}
  #       uses: youyo/aws-cdk-github-actions@v2
  #       with:
  #         cdk_subcommand: "deploy"
  #         cdk_args: "--require-approval never"
  #         actions_comment: false
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: "us-east-1"

  # - name: Login to Public ECR
  #   uses: docker/login-action@v3
  #   with:
  #     registry: public.ecr.aws
  #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     # https://github.com/aws-actions/configure-aws-credentials
  # - name: Extract metadata (tags, labels) for Docker
  #   id: meta
  #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
  #   with:
  #     images: my-docker-hub-namespace/my-docker-hub-repository
  # - name: Build and push Docker image
  #   id: push
  #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
  #   with:
  #     context: .
  #     file: ./Dockerfile
  #     push: true
  #     tags: ${{ steps.meta.outputs.tags }}
  #     labels: ${{ steps.meta.outputs.labels }}
